{
  "title": "Game_Development___Design_txt",
  "content": "# Game_Development_&_Design.txt\n\nContent-Type: text/x-zim-wiki\nWiki-Format: zim 0.6\nCreation-Date: 2024-08-15T21:59:04-07:00\n\n====== Game Development & Design.txt ======\n- General Tips\r\n\r\nGame Feel: Feedback to inform the player about the world. Enemies flashing, spilling blood, changing animations, or sounding off as they get shot. Recoil, gun sounds, etc. \r\n\r\nExternal links\r\n\thttps://www.youtube.com/watch?v=216_5nu4aVQ\r\n\r\nGameplay first. Art, game design, programming, etc should all support this goal.\r\nEasy to learn, difficult to master. Early gameplay should have simple mechanics and obvious objectives. As the game progresses, provide players with challenges that scale to the abilities of the player. \r\nNeed a concept artist, modeller, sound designer, music artist, character artist, animator, technical artist, and fx artist. \r\n\r\nFight Player Fatigue\r\n\t- vary play intensity\r\n\t- introduce novel situations\r\n\t- add new types of play\r\n\t- avoid confinement\r\n\t- bestow rewards for success\r\n\t- advertise progress\r\n\t- include subgames (not literally, things like customization and loadouts)\r\n\t- foreshadow victory\r\nMaximize Expressive Potential (combat, movement, customization, etc)\r\n\r\nProvide Clear Short-Term Goals\r\n\t- Supply goals directly or indirectly\r\n\t- Domain is General\r\n\t- Good way to \"fight player fatigue\"\r\n\r\nIdentify Constraints\r\n\t- Find your constraints as first step\r\n\t- Keep in mind throughout development\r\n\t- Domain is design process\r\n\t- Creative, technical, business, team\r\n\r\nLet players turn the game off\r\n\t- construct good savegame systems\r\n\t- entertain, don't punish\r\n\t- design to hold player interest\r\n\r\n- Mechanics and Teaching Players\r\n\r\nIsolation principle: Introduce enemies by initially presenting them in smaller numbers than usual, or individually. Provide a safe environment for the player to figure out how to fight them. Once the player is confident in killing this enemy type, they're free to be used normally. After going through this area and assessing the player's ability, damage returns to standard levels, and adaptive difficulty takes root. \r\n\r\nLearn from Super Mario 64: Step 1, introduce the mechanic. Step 2, Twist its use. (e.g. jumping can be used to kill enemies), Step 3, add it to the gameplay.\r\n\r\nPlayer freedom: When introducing the player to the game, give them freedom to explore the full extend of it's mechanics and let them move around without being told what to do. \r\n\r\nMechanic over-saturation: Keep the player engaged by avoiding over-use of novel mechanics. e.g. Titanfall 2's time travel mechanic that was removed after the level was over. \r\n\r\nSetbacks: The game's setbacks are used to keep the player in the sweet spot of difficulty. Struggle, engagement, but doesn't make them want to stop. Obstacles with solutions. You fail in real life, but you can't go back to a previous check point. You've got to move forward. If the player is having a hard time with a particular fight, an NPC might suggest they retreat and find an alternative path. Setbacks. Player has an objective. If they fail that objective, the mission isn't over, the game goes on. Say for example, the squad was supposed to reach a door before it closes, they don't make it. Leave the player with an alternative route. Recoverable failure. Setbacks for consequential play. Modify the goal to overcome the setback. introduce new routes after multiple player failures. NPC can present new path and avoid boss or difficult area\r\n\r\n- Art tips\r\nThe art in Star Wars: The Clone Wars had no specular (nothing in it was shiny), matte finish. Very painterly look, so all the textures were hand painted. Sort of surrealist approach to texture. Imperfection in texture work.\r\n\tColorful neon lights don't equal sci-fi\r\n\tNo holograms, AR is acceptable\r\n\tGrounded fictional technology, no hover cars or teleportation.\r\ntexture size\r\n(1024x1024(1K), 2048x2048(2K), 4096x4096(4K), and 8192x8192(8K) which should be used? how would one implement all of these without putting an enormous dent in the game size?\r\nconsider accommodating dual-core CPUs. things like uncompressed audio to lessen CPU load\r\n\r\n- Programming tips\r\nHidden health: DOOM values the last bit of health as more hit points than the rest of it to encourage a feeling of *just* surviving. Bioshock did this by making the player invulnerable for 1-2 seconds if they would've died. \r\n\r\nSmart camera: Third person game thumb stick correction is a favorite. The game detects collision blocks and steers player around them, ignoring direction of input. \r\n\r\nController accessibility: With controllers, utilize features like aim acceleration, snapping, soft lock (drags your view along with an enemy), friction (your aiming speed decreases when your cross hairs are on an enemy), and bullet magnetism to aid those using an inferior peripheral. \r\n\r\n- Optimization Tips\r\n\tPerformance doesn't just concern the environment, leave a buffer for enemy rendering.\r\n\tCPU feeds the GPU. GPU unpacks the data sent by the CPU. \r\n\tSquishy Performance Hammer. Work with art team to get things running well. If that doesn't work, use a sledge hammer. Balance performance and visual fidelity. \r\n\tPer Frame budget. Identify critical costs. Negotiating for milliseconds. Finding the right mix, determine AI budgeting. Allow for overhead. Aim for 8.3ms (4K 120fps). GTX 1080ti\r\n\tClassify map areas to determine optimization goals. Is it combat heavy, environmental? Determine how to spend the per frame budget. \r\n\tEarly performance layout review\r\n\tLine of sight checking. (walk around the map, check to be sure it's all optimized)\r\n\tPerformance tools. Render freeze. Toggle draw states. Heat mapping. CPU/GPU timing.\r\n\tPotential issues: Poor LODing. Small triangles, too many objects. (drawcalls)\r\n\tPotential solutions. Delete them, tune LOD (tweak object detail level) distance. \r\n\tPerformance techniques. Draw calls. Distance cull. (rendering needed objects)\r\n\tPerformance techniques. Occlusion cards. Fog, bloom, imposter (texture map crossfade), view distance dependent. Hide an area and reveal objects behind it when its reached.\r\n\tPerformance issues. Poor culling. Big meshes (cut large meshes up into sections so it's easier to render as the player crosses it). Expensive shaders. (many samplers/instructors)\r\n\tPerformance technique: Refine portals to improve large scale culling. \r\n\tPerformance issues: Overdraw. Lots of overlapping transparent pixels. \r\n\tReduce overdraw. Tune fx. Low-res buffer. \r\n\tReduce transparents. Geometry/material tweaks. Skybox silhouette edge. Shore vs deep water. Optimize post-FX. Optimize collision meshes. \r\n\tLighting costs. Too many lights/influences. Too many dynamic lights. Change lights to a cheaper type. Reduce radius. Reduce number. \r\n\tCallouts. Environment, Lighting, FX, Characters. Give them options for optimization.\r\n\tBe clever with level design. Cull using corners and door ways. Reduce performance cost.\r\n\tModular loading (RAM), only load what you need. Good way to avoid loading screens.\r\n\tsplit up drall call budget. e.g. environment - 6.5ms characters, weapons, vehicles 1.8ms. run slightly under budget to account for cpu/gpu issues.\r\n\tAim for 2560x1440p at 120fps or 1080p at 60fps\r\n\t8.3ms (4K 120fps) 1080ti\r\n\tdon't run calculations per frame\r\n\tLODs should be screen sized based, not distance based\r\n\r\n- Enemy design tips\r\nConsiderate enemies: In Half Life 1, if the player faces more than two enemies at once, only one would actually attack. The rest would run to random locations and bark lies. e.g. Flanking! Halo famously did this, and interestingly, the number that attack increases the closer to you to them, giving a feeling of pushing into the action or easing out of it.  \r\n\r\nArtificial control: Halo 2 makes players feel like they have influence over battle by forcing Grunt NPCs to panic if Elites are killed nearby. Halo 3 embellishes this by having each fight act as a dance: first push forward, then fall-back and finally a last-stand against the player.\r\n\r\nMissed on purpose: First shots from an enemy against you in BioShock always missed. In Half Life 2, if an enemy misses, the bullets are sent in a trajectory calculated to be the most 'interesting'. \r\n\r\nDistinguished silhouette: If the textures and shadows are removed from the 3D object. Are the enemies still easy to tell apart from one another? Enemies should use colors for contrast.\r\n\r\n- Audio/music tips\r\n\tIf there are transitions or loading screens, don't kill the audio. It ruins the atmosphere.\r\n\r\n- Writing/AI Tips\r\nRealistic ignoring: In Firewatch, when a player doesn't respond to dialogue prompt the game notes this as a choice. It reacts to non-response, and it helps create a feeling that ignoring someone has social consequence and the other person is 'real.'\r\n\r\nCreating compelling characters\r\n\tOrganic relationship\r\n\tUseful to player\r\n\tNever burden player\r\n\tWriting in the game needs to have context\r\n\tIt must represent the character well\r\n\tEmbrace the player's experience as story\r\n\tThe ability to lie\r\n\tCharacters with agency\r\n\tPlayer copes with the actions of an NPC\r\n\tPlay can't always influence NPC actions\r\n\tNPCs don't immediately open up to player\r\n\tThe protagonist can't always help people\r\n\tThe protagonist isn't necessarily a hero\r\n\tHumor is important. Don't take everything seriously.\r\n\r\nCreating compelling enemy AI\r\n\tAggressive enemies hunt down and kill the player and their allies\r\n\tEnemies shouldn't be too weak. Their health affects the player's perception of them\r\n\tGood AI lets the player cheat, but not in a way that they would notice\r\n\tWhen the player pops up from cover the enemies have a 0% chance to hit the player, letting them pop off a few shots\r\n\tIn the far cry series, only a few enemies will be allowed to shoot at you at once. improving your odds of winning the fight\r\n\tGood AI is predictable. Intentionality. The player's ability to devise their own goals through an understanding of a game's dynamics\r\n\r\nExternal Links\r\n\thttps://www.youtube.com/watch?v=k72sJZ7E7yI\r\n\r\nOrthogonal Enemies\r\nmagnify small player vulnerabilities. drive unpredictability. game axies should be play-style agnostic. there can't be one enemy that prevents all styles of play. put pressure on the player, but also provide them with channels for surviving or overcoming those obstacles. \r\n\r\nAI Pathfinding\r\nDon't overcomplicate AI pathing. Reduce total number of nav points. Keep them predictable.\r\n\r\ncreating morally difficult characters\r\nestablish factions, and the varying ideologies within those factions. nothing is black and white. add grey. nuanced. multiple motivations. represent variation of these perspectives using squad members dialogue. no one is 'the bad guy' humanizing details\r\nlink character motives to game goals. why do the humans fight the renlei, but not the menesk?\r\nplay to character motives or desires: honor, knowledge, law, faction, public image, trade, peace, resolve, personal goals, etc. reward the player for aligning to those character motives/desires. e.g. honor points. give them these points/rewards for doing things like slaughtering the forces of good. \r\nfree to chase a character's small scale desires all over the place which inevitably leads them to some very dark decisions, while humanizing details distract them from the fact that they are behaving badly. \r\n\r\nWorld building\r\n\tWorld building must be specific. Specific both in terms of detail, and also specific to your world. \r\n\tAlways be world building. Every location, NPC, line of dialogue, objective, side quest, and loot pick up is an opportunity. \r\n\tSay things about people. World building is a form of storytelling, and stories are about people. \r\n\r\n- Level Design\r\nNegative Space in Maps\r\n\thttps://www.youtube.com/watch?v=GZ99gAb4T0o\r\n\tUse negative space to anchor the player's attention. Easier to spot enemies, for example.\r\n\tCluttered maps are difficult to navigate and fight in. Mimic Blood Gulch and Dust. \r\n\tBlur, shrink, or squint. Is the map still readable? Where are the paths, enemies?\r\n\tMake sure the foreground and background work together. Focus player attention.\r\n\tClarity is incredibly important for the player during gameplay.\r\n\tUse the palette filter in photoshop. Are the features still distinguished?\r\n\tApplication of negative space design techniques increases map playability. \r\n\tIf you overwhelm your player with too much info, they'll likely have trouble processing it\r\n\tRemove clutter from maps. Ask where the player's eyes are going. Avoid distractions.\r\n\tPerceived complexity affects a player's ability to process visual information.\r\n\tFocused front ground delineation\r\n\tOrganized presentation of detail\r\n\tBalance of light/colors/shapes\r\n\tAppropriate scale of visual and audio space\r\n\tSubtracting the obvious and only adding the meaningful\r\n\r\nGeneral map tips\r\n\tEach location has multiple entry points you can choose from.\r\n\tThe main objective is always in the middle of the map.\r\n\tProvide multiple routes for the player to choose from.\r\n\tRoutes must lead into each-other, connecting and bending to form a whole map.\r\n\r\nHonest geography: No hidden walls in level design. Avoid falling debris or shouting squad leads; walls are walls, designed to be pushed against in case of a secret room or ammo depot. \r\n\r\nNavigation tips\r\n\tConscious use of contrast everywhere in a level between light and dark areas.\r\n\tIf a player can see outside that they should be able to somehow get there. (DOOM)\r\n\tBeing strict about designing several secret areas on every level.\r\n\tMaking my levels flow so the player will revisit areas several times.\r\n\tCreating easily recognizable landmarks in several places for easier navigation.\r\n\r\nExternal Links\r\n\tPlayer Navigation: https://www.youtube.com/watch?v=k70_jvVOcG0\r\n\r\nDesign Steps\r\n\tConcept\r\n\tLayout\r\n\tGameplay\r\n\tDecorate\r\n\tPolish\r\nInterior Design and Environment Art - https://www.youtube.com/watch?v=WWXsmnlmADc\r\nDo away with mini-maps and design levels that direct the player without it.\r\n\r\nGood Level Design\r\n\tGood level design is fun to navigate\r\n\tthe player should always know where to go. create a consistent visual language. e.g. warframe doors, mirror's edge runner's vision\r\n\tGood level design does not rely on words to tell the story. Tell the story through the environment. Mise-en-scene. \r\n\tGood level design tells the player what to do (not necessarily verbally), but not how to do it.\r\n\tGood level design constantly teaches\r\n\tGood level design is surprising (keep things fresh, don't fall into a routine. introduce level design and enemy combination twists) fun is created by uncertainty. subversiveness\r\n\tGood level design empowers the player\r\n\tGood level design is easy, medium, and hard\r\n\tGood level design is efficient\r\n\r\nBuilding Levels\r\nClearly defined requirements\r\n\tTarget length\r\n\tNarrative\r\n\tNumber of players/enemies\r\n\tMechanic concept\r\nCapture Intent, capturing the design of a level\r\n\tConcept\r\n\tWalkthrough - Scope, Major Objective, Major Beats\r\n\tBlockworld\r\n\r\n\n\n\n## Metadata\n- **Source**: All of it Anything Everything At Once/Game_Development_&_Design.txt.txt\n- **Type**: document\n- **Tags**: document, All_of_it_Anything_Everything_At_Once, character-design, dialogue, weapon, location, story, quest, feature, gameplay, mechanic\n- **Imported**: 2025-05-05T16:25:37.057Z",
  "source": {
    "type": "notebook",
    "path": "All of it Anything Everything At Once/Game_Development_&_Design.txt.txt",
    "importedAt": "2025-05-05T16:25:37.057Z"
  },
  "created": "2025-05-05T16:25:37.057Z",
  "modified": "2025-05-05T16:25:37.057Z",
  "tags": [
    "document",
    "All_of_it_Anything_Everything_At_Once",
    "character-design",
    "dialogue",
    "weapon",
    "location",
    "story",
    "quest",
    "feature",
    "gameplay",
    "mechanic"
  ]
}