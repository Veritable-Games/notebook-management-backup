Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2024-07-23T15:49:53-07:00

====== unity-channel.txt ======

Amplify Imposters
Amplify Occlusion
Deckard Render
Gaia 2021
GrassFlow
InfiniCLOUD
Infini GRASS
iStep
Opsive
KWS Water System
Mtree
Next-Gen Soft-Shadows
Obi-Rope, Puppet Master
Real Stars Skybox Plus 
Rewired
The Vegetation Engine [+] Amplify Imposters module 
UModeler

Some recommendations I will do research on
UniRX
Final IK
Amplify Imposters
Vegetation Studio Pro
A*Pathfinding Pro
Prefab Brush
Advanced Pooling System
Dynamic Bone
Zenject
Master Audio
ReUiniter
Favorite Tabs
Better Coroutines
Dynamic Bone
Editor Console Pro
QHierarchy
Console Enhanced
Hierarchy Pro
Amplify Shader Editor
Easy Save
Sectr Audio
Rewired
Font Setter-Packer
DOTTween
Odin Inspector
Spine
Simple Animation Component
 
[2:51 PM]Glitch: The ‘Grid Point’ & ‘Point Note’ Systems: Here's the Google Doc to describe these (not done) scripts.
https://docs.google.com/document/d/1xbTKyToo5DTu0k9r_4vkBYuygUmj11T1WA-JvWZ7dAE/edit

The Point Note System:
Allows users to attach notes to objects in the game world and link them using UI point-lines. An auto-indexing dictionary manages notes and a scrollbar facilitates navigation between them. This system provides a way to manage notes that are associated with specific points in the game world.

The Grid Point System:
Works with the Point Note System to provide a more precise way of positioning objects in the game world. It uses a grid system to define points in 3D space, eliminating floating point errors. This system manages a grid of points in the game world, and can be used for positioning and snapping objects or creating a structured environment.

The Note System:
Enables players to attach text notes to objects in the game world, with the ability to edit, delete, or link notes using connection lines. Notes are auto-indexed, and a scrollbar facilitates navigation between them. This system provides a way to gather notes throughout the game world while exploring freely.

[...] 
[10:00 PM]Jcorella: Great for drafting, horrible for production.
Careful you dont end up with a yandere simulator code mess.
It's impossible to debug properly without context of implementation. Any programmer going through will have to pretty much start form the ground up.
[10:59 AM]Glitch: best I could manage without them being totally finished. proof will come when they're functional
[11:00 AM]Glitch: check the link above
[10:09 AM]Glitch: Here are some recent GitHub Repositories I've added to my system
- firebase-unity-sdk (linked to a host site: access to ML resources
- ml-agents (Unity's source project for ML agents)
- veritable-games-repository (where we'll share creative stuff)
- dodec-systems (where I'll be keeping a reserve of all my systems)
- amp.dev (a requisite for other systems)

And then here are some plugins I've found recently
- ChatGPT-Unity-Bookmark-main
- ChatGPT-into-Unity-main
- UnityChatGPTScriptGenerator-main
- DialogueDreamland-main
- AIShader-main

@Anarco (Rorschach) I've done a lot of the grunt work here. Most of the backend systems are integrated. (to the best of my knowledge) I tried the plugin I bought on the asset store but there were continual issues I could not find a workaround for. I have the secret key for ChatGPT and the organization info for Firebase, then my domain. I dis all the background Node work. All of the environments are setup like they ought to be. Just need to resolve these last components.
[10:10 AM]Glitch: Future-proofing is how I'd describe what I'm doing here. We will need AI systems. ML is how we teach them.
[10:13 AM]Glitch: I've got books and books and books to transcribe for our reference. But this all takes precedent. The engine work is where our most-tangible progress is shown to people. The design docs have made huge strides, too. But they are likewise unfinished. I am way too focused on the backend right now.
[7:31 PM]Glitch: fuck. this is like fiction
[7:42 PM]Glitch: https://langchain.readthedocs.io/en/latest/getting_started/getting_started.html
[8:07 PM]Glitch: these threads just go on...ahahaha
[6:06 AM]Glitch: https://www.youtube.com/watch?v=kYRB-vJFy38
YouTube
Data Independent
LangChain 101: Quickstart Guide
Image
[6:16 AM]Glitch: https://www.youtube.com/watch?v=nE2skSRWTTs
YouTube
James Briggs
Getting Started with GPT-3 vs. Open Source LLMs - LangChain #1
Image
Glitch
 pinned 
a message
 to this channel. See all 
pinned messages
.
 — 03/22/2023 2:40 PM
